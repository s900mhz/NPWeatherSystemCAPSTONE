
@using Capstone.Web.Models

@model Survey

@{ 
    IList<SelectListItem> parks = new List<SelectListItem>(Model.GetParksList());
    IList<SelectListItem> states = new List<SelectListItem>(Model.GetStatesList());
}

<style>
    .field-validation-error {
        color: red;
    }
    .row {
        padding: 7px; 
    }
</style>

<h2>* Submit Your Survey *</h2>
<h4>Please Vote on your favorite park here!</h4>
<h4>Results will be tallied and displayed on the next page.</h4>
<p style="font-size: small">(all fields required to vote and see results)</p>
<hr>
@using (Html.BeginForm("Survey", "Home", FormMethod.Post))
{
<div class="row">
    <div class="col-sm-3" style="text-align:right">
        Vote HERE:
    </div>
    <div class="col-sm-5">
        @Html.DropDownListFor(m => m.UserParkChoice, parks, "Select Your Favorite Park")
        @Html.ValidationMessageFor(m => m.UserParkChoice)
    </div>
</div>
    <div class="row">
        <div class="col-sm-3" style="text-align:right; padding-top: 5px">
            Sign-up (required):
        </div>
        <div class="col-sm-4">
            <input class="form-control" data-val="true"
                   data-val-required="Enter a valid email address." id="EmailAddress"
                   name="EmailAddress" placeholder="email address (required)" 
                   type="email" value=""/>
            @Html.ValidationMessageFor(m => m.EmailAddress)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3" style="text-align:right">
            State:
        </div>
        <div class="col-sm-5">
            @Html.DropDownListFor(m => m.UserStateChoice, states, "Select Your Residence State")
            @Html.ValidationMessageFor(m => m.UserStateChoice)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3" style="text-align:right; padding-top: 5px">
            Rate the activity level:
        </div>
        <div class="col-sm-8">
            <div class="btn-group btn-group" data-toggle="buttons">
                <label class="btn btn-primary">
                    <input data-val="true" data-val-required="The UserActivityChoice field is required."
                           id="UserActivityChoice" name="UserActivityChoice" type="radio" value="Inactive" class="form-check-input" />Inactive
                </label>
                <label class="btn btn-primary">
                    <input data-val="true" data-val-required="The UserActivityChoice field is required."
                           id="UserActivityChoice" name="UserActivityChoice" type="radio" value="Inactive" class="form-check-input" />Sedentary
                </label>
                <label class="btn btn-primary">
                    <input data-val="true" data-val-required="The UserActivityChoice field is required."
                           id="UserActivityChoice" name="UserActivityChoice" type="radio" value="Inactive" class="form-check-input" />Active
                </label>
                <label class="btn btn-primary">
                    <input data-val="true" data-val-required="The UserActivityChoice field is required."
                           id="UserActivityChoice" name="UserActivityChoice" type="radio" value="Inactive" class="form-check-input" />Extremely Active
                </label>
                @Html.ValidationMessageFor(m => m.UserActivityChoice)
            </div>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-sm-6"> </div><div>
            <button type="submit" class="btn btn-primary" style="padding:5px">Submit</button>
        </div>
    </div>
}
